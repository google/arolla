module(name = "arolla")

bazel_dep(name = "abseil-cpp", version = "20250512.0", repo_name = "com_google_absl")
bazel_dep(name = "abseil-py", version = "2.1.0", repo_name = "com_google_absl_py")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "boost.math", version = "1.87.0")
bazel_dep(name = "double-conversion", version = "3.3.0", repo_name = "com_google_double_conversion")
bazel_dep(name = "google_benchmark", version = "1.9.4", repo_name = "com_google_benchmark")
bazel_dep(name = "googletest", version = "1.17.0", repo_name = "com_google_googletest")
bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "protobuf", version = "31.1", repo_name = "com_google_protobuf")
bazel_dep(name = "pybind11_abseil", version = "202402.0")
bazel_dep(name = "pybind11_bazel", version = "2.13.6")
bazel_dep(name = "pybind11_protobuf", version = "0.0.0-20250210-f02a2b7")
bazel_dep(name = "re2", version = "2024-07-02.bcr.1", repo_name = "com_googlesource_code_re2")
bazel_dep(name = "riegeli", version = "0.0.0-20250706-c4d1f27", repo_name = "com_google_riegeli")
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_python", version = "1.4.1")
bazel_dep(name = "rules_shell", version = "0.4.1")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    ignore_root_user_error = True,  # Required for our containerized CI environments.
    is_default = True,
    python_version = "3.11",
)
python.toolchain(
    ignore_root_user_error = True,
    python_version = "3.12",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "arolla_pip_deps",
    python_version = "3.11",
    requirements_lock = "//:requirements_lock.txt",
)
pip.parse(
    hub_name = "arolla_pip_deps",
    python_version = "3.12",
    requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, pip_deps = "arolla_pip_deps")

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "com_google_cityhash",
    build_file = "external/BUILD.cityhash",
    integrity = "sha256-sNnBNfNr3Ev3ThP3/+i6otiBOC9n57A5/xc0vSQwIBg=",
    patch_cmds = [
        # Running "configure" creates the config.h file needed for this library.
        # Then, the source files are moved to a new "cityhash" directory for
        # consistency with the namespace.
        "./configure",
        "mkdir cityhash",
        "mv config.h cityhash",
        "mv src/city.h cityhash",
        "mv src/citycrc.h cityhash",
        "mv src/city.cc cityhash",
    ],
    patches = [
        # Apply patches to add a "third_party_cityhash" namespace to the functions.
        "external/cityhash.patch",
    ],
    strip_prefix = "cityhash-master",
    url = "https://github.com/google/cityhash/archive/refs/heads/master.tar.gz",
)

http_archive(
    name = "icu4c",
    build_file = "external/BUILD.icu4c",
    integrity = "sha256-TLp7es0dPELES7DBS+ZjcJjH+vKzMM6Ha8XzuRXQl0U=",
    url = "https://github.com/unicode-org/icu/releases/download/release-69-1/icu4c-69_1-src.tgz",
)
